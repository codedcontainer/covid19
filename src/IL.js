// Generated by Selenium IDE
const { Builder, By, until } = require('selenium-webdriver');
const chrome = require('selenium-webdriver/chrome');
const moment = require('moment'); 

async function getStats()
{
    let driver = await new Builder().forBrowser('chrome')
        .setChromeOptions(new chrome.Options().headless())
        .build();

    await driver.get("https://coronavirus.illinois.gov/s/");
    await driver.wait(until.elementLocated(By.css(".slds-max-small-size_12-of-12:nth-child(1) lightning-formatted-number")), 10000);

    let totalPositiveCases = await driver.findElement(By.css(".slds-max-small-size_12-of-12:nth-child(1) lightning-formatted-number")).getText()
    let totalDeaths = await driver.findElement(By.css(".slds-max-small-size_12-of-12:nth-child(2) lightning-formatted-number")).getText()
    let totalTested = await driver.findElement(By.css(".slds-max-small-size_12-of-12:nth-child(3) lightning-formatted-number")).getText()

    totalPositiveCases = totalPositiveCases.replace(',', '');
    totalTested = totalTested.replace(',', '');
    totalDeaths = totalDeaths.replace(',', '');

    driver.close();
    return {
        'IL': {
            totalPositiveCases,
            totalTested,
            totalDeaths
        }
    };
}

async function setStats(doc, sheetId)
{
    let sheet = doc.sheetsById[sheetId];

    await getStats().then((stats) =>
    {
        sheet.addRow({
            "Date": moment().format('MM/DD/YYYY'),
            "Cases": stats.IL.totalPositiveCases,
            "Deaths": stats.IL.totalDeaths,
            "Tested": stats.IL.totalTested
        });
    });
}

module.exports.setStats = setStats; 
